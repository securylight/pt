import ipaddress
import logging
import threading
import time
from socket import *



def port_sweep(addr):	
	logging.info("Thread %s: starting", addr)
	for i in range(1720, 65535):
		s = socket(AF_INET, SOCK_STREAM)
		result = s.connect_ex((str(addr), i))
		if(result == 0):
			print ('Host %s, Port %d: OPEN' % (addr,i,))
			f= open("results.txt","a+")
			f.write('Host %s, Port %d: OPEN \n' % (addr,i,))
		#else:
		#	print ('Port %d: close' % (i,))
		s.close()
	
	
	logging.info("Thread %s: finishing", addr)

if __name__ == "__main__":
	format = "%(asctime)s: %(message)s"
	logging.basicConfig(format=format, level=logging.INFO,
                        datefmt="%H:%M:%S")
						
	threads = []	
	
	with open("cider.txt") as file:
		for cider in file:
			cider = cider.strip() 	
			net = ipaddress.ip_network(cider)
			
			for addr in net:
				print(addr)
				logging.info("Main    : before creating thread")
				x = threading.Thread(target=port_sweep, args=(addr,))
				threads.append(x)
				logging.info("Main    : before running thread")
				x.start()				
	for t in threads:
		t.join()
	logging.info("Main    : all done")
